paths:
  /admin/api/organizations:
    get:
      tags:
        - Organizations
        - Admin
      summary: List all organizations
      description: Retrieves all organizations (admin only)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
        '401':
          description: Unauthorized - not authenticated or not an admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    post:
      tags:
        - Organizations
        - Admin
      summary: Create organization
      description: Creates a new organization (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Organization name
                slug:
                  type: string
                  description: URL-friendly identifier for the organization
              required:
                - name
                - slug
      responses:
        '200':
          description: Organization created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Bad request - missing or invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - not authenticated or not an admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /admin/api/organizations/check-slug:
    post:
      tags:
        - Organizations
        - Admin
      summary: Check if organization slug is available
      description: Checks if a given slug is available for use (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                slug:
                  type: string
                  description: The slug to check
              required:
                - slug
      responses:
        '200':
          description: Slug availability check result
          content:
            application/json:
              schema:
                type: object
                properties:
                  available:
                    type: boolean
                    description: Whether the slug is available
        '401':
          description: Unauthorized - not authenticated or not an admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /admin/api/organizations/{id}:
    get:
      tags:
        - Organizations
        - Admin
      summary: Get organization details
      description: Retrieves details of a specific organization (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Organization ID
      responses:
        '200':
          description: Organization details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '401':
          description: Unauthorized - not authenticated or not an admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    patch:
      tags:
        - Organizations
        - Admin
      summary: Update organization
      description: Updates an existing organization (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Organization ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Organization name
                slug:
                  type: string
                  description: URL-friendly identifier for the organization
      responses:
        '200':
          description: Organization updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Bad request - missing or invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - not authenticated or not an admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    delete:
      tags:
        - Organizations
        - Admin
      summary: Delete organization
      description: Deletes an organization (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Organization ID
      responses:
        '200':
          description: Organization deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Unauthorized - not authenticated or not an admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/organizations/memberships:
    get:
      tags:
        - Organizations
      summary: Get user's organization memberships
      description: Retrieves all organizations the authenticated user is a member of
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of user's organization memberships
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    organization:
                      $ref: '#/components/schemas/Organization'
                    role:
                      type: string
                      enum: [member, admin, owner]
                    isActive:
                      type: boolean
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 